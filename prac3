Practical 3A: A RMI based application program to display current date and time. Code:
⦁	RMIInterfaceDate.java
import java.rmi.*;

public interface RMIInterfaceDate extends Remote {  
    String printDate() throws RemoteException;
}

⦁	RMIServerDate.java
import java.rmi.*; 
import java.rmi.server.*; 
import java.text.SimpleDateFormat;
import java.util.Date;

public class RMIServerDate extends UnicastRemoteObject implements RMIInterfaceDate {

    public RMIServerDate() throws RemoteException {
        System.out.println("Server is initialized");
    }

    public String printDate() throws RemoteException {
        Date d = new Date();
        SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        String myDate = myFormat.format(d);
        System.out.println("Server: " + myDate);
        return myDate;
    }

    public static void main(String[] args) {
        try {
            System.out.println("RMIServerDate started.");
            RMIServerDate obj = new RMIServerDate();
            Naming.rebind("RMIServerDate", obj);
            System.out.println("Object registered.");
        } catch (Exception e) {
            System.out.println("Server exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}

⦁	RMIClientDate.java
import java.rmi.*;

public class RMIClientDate {
    public static void main(String[] args) {
        try {
            System.out.println("RMIClientDate started.");
            RMIInterfaceDate server = (RMIInterfaceDate) Naming.lookup("RMIServerDate");
            String serverDate = server.printDate();
            System.out.println("Server: " + serverDate);
        } catch (Exception e) {
            System.out.println("Client exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}


Practical 3B: A RMI based application program that converts digits to words, e.g. 123 will be converted to one two three.
Code:
⦁	InterConvert.java
import java.rmi.*;
public interface InterConvert extends Remote {  
    String convertDigit(String no) throws RemoteException;
}

⦁	ServerConvert.java
import java.rmi.*; 
import java.rmi.server.*;

public class ServerConvert extends UnicastRemoteObject implements InterConvert {

    public ServerConvert() throws RemoteException { 
        System.out.println("Server is initialized.");
    }

    public String convertDigit(String no) throws RemoteException { 
        StringBuilder str = new StringBuilder();

        for (int i = 0; i < no.length(); i++) { 
            char digit = no.charAt(i);
            switch (digit) {
                case '0': str.append("zero "); break;
                case '1': str.append("one "); break;
                case '2': str.append("two "); break;
                case '3': str.append("three "); break;
                case '4': str.append("four "); break;
                case '5': str.append("five "); break;
                case '6': str.append("six "); break;
                case '7': str.append("seven "); break;
                case '8': str.append("eight "); break;
                case '9': str.append("nine "); break;
                default: return "Invalid input. Please enter digits only.";
            }
        }
        return str.toString().trim();
    }

    public static void main(String[] args) {
        try {
            ServerConvert s1 = new ServerConvert();
            Naming.rebind("Wrd", s1);
            System.out.println("Object registered.");
        } catch (Exception e) {
            System.out.println("Server exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}

⦁	ClientConvert.java 
import java.rmi.*; 
import java.io.*;

public class ClientConvert {
    public static void main(String[] args) {
        try {
            InterConvert h1 = (InterConvert) Naming.lookup("Wrd");
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            System.out.print("Enter a number: ");
            String no = br.readLine();

            String ans = h1.convertDigit(no);
            System.out.println("The word representation of the entered digit is: " + ans);
        } catch (Exception e) {
            System.out.println("Client exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}


